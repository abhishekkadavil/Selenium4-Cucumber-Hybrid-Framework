<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="2" passed="1" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-04-06T19:51:32 IST" name="Surefire suite" finished-at="2022-04-06T19:51:36 IST" duration-ms="4159">
    <groups>
      <group name="cucumber">
        <method signature="AbstractTestNGCucumberTests.runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.runners.TestRunner@4387b79e]" name="runScenario" class="io.cucumber.testng.AbstractTestNGCucumberTests"/>
      </group> <!-- cucumber -->
    </groups>
    <test started-at="2022-04-06T19:51:32 IST" name="Surefire test" finished-at="2022-04-06T19:51:36 IST" duration-ms="4159">
      <class name="com.runners.TestRunner">
        <test-method is-config="true" signature="setUpClass(org.testng.ITestContext)[pri:0, instance:com.runners.TestRunner@4387b79e]" started-at="2022-04-06T19:51:32 IST" name="setUpClass" finished-at="2022-04-06T19:51:32 IST" duration-ms="188" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@6cea706c]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:com.runners.TestRunner@4387b79e]" started-at="2022-04-06T19:51:32 IST" name="beforeClass" finished-at="2022-04-06T19:51:32 IST" duration-ms="164" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.runners.TestRunner@4387b79e]" started-at="2022-04-06T19:51:32 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2022-04-06T19:51:35 IST" duration-ms="3354" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["login with invalid user"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Login]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.runners.TestRunner@4387b79e]" started-at="2022-04-06T19:51:32 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2022-04-06T19:51:35 IST" duration-ms="3479" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["login with valid user"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Login]"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Log out] but found [LOG OUT]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Log out] but found [LOG OUT]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at org.testng.Assert.assertEquals(Assert.java:639)
at com.stepDef.LoginPageSteps.userShouldBeAbleToLoginSuccessfully(LoginPageSteps.java:31)
at âœ½.user should be able to login successfully(file:///home/qbuser/Kadavil/IdeaWorkSpace/Selenium4CucumberHybridFramework/Features/Login.feature:11)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:com.runners.TestRunner@4387b79e]" started-at="2022-04-06T19:51:35 IST" name="afterClass" finished-at="2022-04-06T19:51:36 IST" duration-ms="295" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method is-config="true" signature="tearDownClass()[pri:0, instance:com.runners.TestRunner@4387b79e]" started-at="2022-04-06T19:51:36 IST" name="tearDownClass" finished-at="2022-04-06T19:51:36 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
      </class> <!-- com.runners.TestRunner -->
    </test> <!-- Surefire test -->
  </suite> <!-- Surefire suite -->
</testng-results>
